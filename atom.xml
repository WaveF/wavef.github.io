<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://wavef.github.io/</id>
    <title>WaveF</title>
    <updated>2019-07-15T15:15:12.262Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://wavef.github.io/"/>
    <link rel="self" href="https://wavef.github.io//atom.xml"/>
    <subtitle>A Desigrammer</subtitle>
    <logo>https://wavef.github.io//images/avatar.png</logo>
    <icon>https://wavef.github.io//favicon.ico</icon>
    <rights>All rights reserved 2019, WaveF</rights>
    <entry>
        <title type="html"><![CDATA[企业微信群日报自动化]]></title>
        <id>https://wavef.github.io//post/auto-send-daily-report-to-wework</id>
        <link href="https://wavef.github.io//post/auto-send-daily-report-to-wework">
        </link>
        <updated>2019-07-15T14:32:16.000Z</updated>
        <content type="html"><![CDATA[<p>公司要求每天在腾讯共享文档上写日报，还要求必须在企业微信群里再发一次，这种搬砖行为总是导致我回到公司打开休眠的电脑后忘记重新登录企业微信而漏接消息，于是萌生了自动化转发的念头。</p>
<h1 id="思路">思路：</h1>
<p>用puppeteer进行模拟操作，用request通知机器人发送消息，用node-schedule定时运行node脚本。</p>
<h1 id="难点">难点：</h1>
<ol>
<li>腾讯文档内容区域是canvas，无法抓取内容，但可以通过键盘将焦点移动到目标表格上，然后通过id获得输入栏的值（这个是DOM元素），这样就可以取得目标表格的值了。</li>
<li>用QQ帐号和密码可以全自动登录，可是当频繁登录时一旦出现安全异常提示，就会一直卡在登录界面，就算扫码也无法进入，后来改为微信扫码登录解决，微信扫码可以频繁登录不报错。</li>
<li>由于使用微信扫码登入，所以需要把流程分为两部分，第一部分是扫码登录进入腾讯文档（只需初次执行脚本时扫一次即可），第二部分则是定时循环执行：获取日报内容。注意期间不能关闭虚拟浏览器，否则又要扫码登录……当然也可以多建一个机器人把登录二维码截屏发到另一个群里，自己扫码登录</li>
<li>CentOS里运行puppeteer还需要安装很多其他软件，这个需要自行google，而且虚拟浏览器里还会由于缺少中文字体而无法正常显示，想省事就找台Win服务器去跑吧……</li>
</ol>
<h1 id="核心代码">核心代码：</h1>
<h2 id="登录部分">登录部分</h2>
<pre><code>async function autoReport() {
    const browser = await puppeteer.launch({ headless: !debug; });
    const page = await browser.newPage();
    await page.setViewport({ width: 1200, height: 800 });

    await console.log('- 打开文档链接');
    await page.goto(docURL);

    await console.log('- 点击立即登录');
    await page.click('#blankpage-button-pc');
    await page.waitFor(delay);
    
    await console.log('- 点击登录');
    const wechatButton = await page.$('#wechat-tabs-title');
    await wechatButton.click();
    await page.waitFor(delay);

    await page.screenshot({
        path: './assets/wechat.png',
        fullPage: true
    });
    await exec('start &quot;C:\\Program Files\\Honeyview\\Honeyview.exe&quot; &quot;assets\\wechat.png&quot;');
    await prompt(&quot;- 等待微信扫码，回车继续...&quot;);

    await page.waitForSelector('#padeditor');
    // await page.waitForNavigation();
    // await page.waitForNavigation({ waitUntil: &quot;networkidle2&quot; });
    await console.log('- 成功进入表格');
    
		await console.log('- 计划任务待命...');
		await schedule.scheduleJob(plan, () =&gt; {
				takeAction(page);
		}
};
</code></pre>
]]></content>
    </entry>
</feed>